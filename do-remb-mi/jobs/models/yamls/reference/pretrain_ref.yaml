name: zack-doremi-reference

integrations:
  - integration_type: git_repo
    git_branch: zack/do-remb-mi
    git_repo: zankner/llm-foundry
    pip_install: .[gpu]
    ssh_clone: true
  - integration_type: wandb
    entity: mosaic-ml
    project: DoRembMi

image: mosaicml/llm-foundry:1.13.1_cu117-latest
cluster: # Set in launch script
gpu_num: # Set in launch script

command: |-
  cd llm-foundry/scripts
  composer train/train.py /mnt/config/parameters.yaml || (echo "Command failed - killing python" && pkill python && exit 1)

parameters:
  global_seed: # Set in launch script
  max_seq_len: 2048 # max tokens per sequence during training

  run_name: #Set in launch script

  # Model
  model:
    name: mpt_causal_lm
    init_device: meta
    d_model: 768
    n_heads: 12
    n_layers: 12
    expansion_ratio: 4
    max_seq_len: ${max_seq_len}
    vocab_size: 50432 # update for hero run with custom tokenizer
    no_bias: true
    attn_config:
      alibi: true
      attn_impl: triton
      clip_qkv: 6
      attn_uses_sequence_id: true

  # Tokenizer
  tokenizer:
    name: EleutherAI/gpt-neox-20b # default tokenizer used for MPT
    kwargs:
      model_max_length: ${max_seq_len}

  # Optimization
  global_train_batch_size: 512 # ~1M tokens, update for hero run, must be divisible by gpu_num
  max_duration: # Set by launch script

  optimizer:
    name: decoupled_lionw
    lr: 2.0e-4
    betas:
      - 0.9
      - 0.95
    weight_decay: 0.0006

  scheduler:
    name: cosine_with_warmup
    t_warmup: 0.06dur
    alpha_f: 0.1

  # System
  seed: ${global_seed}
  precision: amp_bf16
  device_train_microbatch_size: 32
  device_eval_batch_size: 32

  # FSDP
  fsdp_config:
    activation_checkpointing: false
    activation_checkpointing_reentrant: false
    activation_cpu_offload: false
    limit_all_gathers: true
    mixed_precision: PURE
    sharding_strategy: FULL_SHARD
    state_dict_type: full
    verbose: false

  # Logging
  eval_first: true
  eval_interval: 2000ba
  log_to_console: true
  console_log_interval: 100ba
  progress_bar: false
  python_log_level: DEBUG
  loggers:
    wandb:
      project: DoReMi
      tags:
        - reference
        - seed-${global_seed}
      group: ${run_name}

  # Checkpointing
  autoresume: # Set by launch script
  save_filename: ep{epoch}-ba{batch}/rank{rank}.pt
  save_folder: oci://mosaicml-internal-checkpoints/zack/DoReMi/pile/reference/${run_name}-seed-${global_seed} # update for hero run
  save_interval: 1000ba # update for hero run, e.g. 2000ba
  save_num_checkpoints_to_keep: 1

  # Algos and Callbacks
  algorithms:
    gradient_clipping:
      clipping_threshold: 1
      clipping_type: norm

  callbacks:
    lr_monitor: {}
    memory_monitor: {}
    # mono_ckpt_saver:
    #   batch_interval: ${save_interval}
    #   filename: ep{epoch}-ba{batch}/mono.pt
    #   save_folder: ${save_folder}
    runtime_estimator: {}
    scheduled_gc:
      batch_interval: 2000
    speed_monitor:
      window_size: 1

  # Dataloaders
  eos_token_id: 0 # update for hero run with custom tokenizer
  num_canonical_nodes: 128 # update for hero run, must be codivisible by # physical nodes

  # Eval loader
  eval_loader:
    name: text
    drop_last: false
    num_workers: 8
    dataset:
      eos_token_id: ${eos_token_id}
      max_seq_len: ${max_seq_len}
      num_canonical_nodes: ${num_canonical_nodes}
      shuffle: false
      shuffle_algo: py1b
      shuffle_seed: ${global_seed}
      local: /tmp/dataset/val_c4
      remote: oci://mosaicml-internal-dataset-pile/pre-concat/gpt-neox-20b-seqlen-2048
      split: val

  # In-context-learning tasks
  icl_tasks:
    - label: piqa
      dataset_uri: eval/local_data/piqa.jsonl
      num_fewshot: [0, 1, 5]
      icl_task_type: multiple_choice
      continuation_delimiter: "Answer: "
    - label: lambada
      dataset_uri: eval/local_data/lambada_openai.jsonl
      num_fewshot: [0]
      icl_task_type: language_modeling

  # Train loader
  train_loader:
    name: text
    drop_last: true
    num_workers: 8
    dataset:
      eos_token_id: ${eos_token_id}
      max_seq_len: ${max_seq_len}
      num_canonical_nodes: ${num_canonical_nodes}
      shuffle: true
      shuffle_algo: py1b
      shuffle_seed: ${global_seed}
      samples_per_epoch: # Fill with samples in the Pile
      streams: # Filled by launch script
